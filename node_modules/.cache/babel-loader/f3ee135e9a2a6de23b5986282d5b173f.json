{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/misterpagz/Documents/reactportfolio/src/components/Project/index.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\n\n/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"../Button/index\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grow from \"@material-ui/core/Grow\";\nimport \"./style.css\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 50\n  },\n  card: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"rgb(70, 70, 70)\",\n    color: \"white\"\n  }\n}));\nexport default function SimpleGrow({\n  project\n}) {\n  _s();\n\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(true);\n  return /*#__PURE__*/_jsxDEV(Grow, {\n    in: checked,\n    style: {\n      transformOrigin: \"0 0 0\"\n    },\n    ...(checked ? {\n      timeout: 1000\n    } : {}),\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      elevation: 4,\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(CardActionArea, {\n        children: [/*#__PURE__*/_jsxDEV(CardMedia, {\n          component: \"img\",\n          height: \"170\",\n          image: project.image,\n          title: project.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h5\",\n            component: \"h2\",\n            style: {\n              fontFamily: \"Spartan\"\n            },\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            component: \"p\",\n            children: project.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SimpleGrow, \"kk/cN5/LxShYtioAzfNg1QPS6v8=\", false, function () {\n  return [useStyles];\n});\n\n_c = SimpleGrow;\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleGrow\");","map":{"version":3,"sources":["/Users/misterpagz/Documents/reactportfolio/src/components/Project/index.js"],"names":["React","makeStyles","Card","CardActionArea","CardActions","CardContent","CardMedia","Button","Typography","Grow","useStyles","theme","root","flexGrow","marginTop","card","padding","spacing","textAlign","backgroundColor","color","SimpleGrow","project","classes","checked","setChecked","useState","transformOrigin","timeout","image","name","fontFamily","description"],"mappings":";;;;;AAAA;;AACA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAO,aAAP;AAEA,MAAMC,SAAS,GAAGT,UAAU,CAAEU,KAAD,KAAY;AACvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,CADN;AAEJC,IAAAA,SAAS,EAAE;AAFP,GADiC;AAKvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAEL,KAAK,CAACM,OAAN,CAAc,CAAd,CADL;AAEJC,IAAAA,SAAS,EAAE,QAFP;AAGJC,IAAAA,eAAe,EAAE,iBAHb;AAIJC,IAAAA,KAAK,EAAE;AAJH;AALiC,CAAZ,CAAD,CAA5B;AAaA,eAAe,SAASC,UAAT,CAAoB;AAACC,EAAAA;AAAD,CAApB,EAA+B;AAAA;;AAC5C,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBzB,KAAK,CAAC0B,QAAN,CAAe,IAAf,CAA9B;AAEA,sBACE,QAAC,IAAD;AACA,IAAA,EAAE,EAAEF,OADJ;AAEA,IAAA,KAAK,EAAE;AAAEG,MAAAA,eAAe,EAAE;AAAnB,KAFP;AAAA,QAGKH,OAAO,GAAG;AAAEI,MAAAA,OAAO,EAAE;AAAX,KAAH,GAAuB,EAHnC;AAAA,2BAKA,QAAC,IAAD;AAAM,MAAA,SAAS,EAAE,CAAjB;AAAoB,MAAA,SAAS,EAAEL,OAAO,CAACR,IAAvC;AAAA,8BACE,QAAC,cAAD;AAAA,gCACE,QAAC,SAAD;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,MAAM,EAAC,KAFT;AAGE,UAAA,KAAK,EAAEO,OAAO,CAACO,KAHjB;AAIE,UAAA,KAAK,EAAEP,OAAO,CAACQ;AAJjB;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE,QAAC,WAAD;AAAA,kCACE,QAAC,UAAD;AACE,YAAA,YAAY,MADd;AAEE,YAAA,OAAO,EAAC,IAFV;AAGE,YAAA,SAAS,EAAC,IAHZ;AAIE,YAAA,KAAK,EAAE;AAACC,cAAAA,UAAU,EAAC;AAAZ,aAJT;AAAA,sBAMGT,OAAO,CAACQ;AANX;AAAA;AAAA;AAAA;AAAA,kBADF,eASE,QAAC,UAAD;AACE,YAAA,OAAO,EAAC,OADV;AAEE,YAAA,SAAS,EAAC,GAFZ;AAAA,sBAIGR,OAAO,CAACU;AAJX;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAyBE,QAAC,WAAD;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD;;GAzCuBD,U;UACNX,S;;;KADMW,U","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable react/jsx-no-target-blank */\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"../Button/index\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grow from \"@material-ui/core/Grow\";\nimport \"./style.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    marginTop: 50,\n  },\n  card: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    backgroundColor: \"rgb(70, 70, 70)\",\n    color: \"white\"\n  },\n}));\n\nexport default function SimpleGrow({project}) {\n  const classes = useStyles();\n  const [checked, setChecked] = React.useState(true);\n\n  return (\n    <Grow\n    in={checked}\n    style={{ transformOrigin: \"0 0 0\" }}\n    {...(checked ? { timeout: 1000 } : {})}\n    >\n    <Card elevation={4} className={classes.card}>\n      <CardActionArea>\n        <CardMedia\n          component=\"img\"\n          height=\"170\"\n          image={project.image}\n          title={project.name}\n        />\n        <CardContent>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n            style={{fontFamily:\"Spartan\"}}\n          >\n            {project.name}\n          </Typography>\n          <Typography\n            variant=\"body2\"\n            component=\"p\"\n          >\n            {project.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button project={project}></Button>\n      </CardActions>\n    </Card>\n    </Grow>\n  );\n}"]},"metadata":{},"sourceType":"module"}