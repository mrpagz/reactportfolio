{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/misterpagz/Documents/reactportfolio/src/components/Button/index.js\";\nimport React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nconst MyButton = styled(({\n  color,\n  ...other\n}) => /*#__PURE__*/_jsxDEV(Button, { ...other\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 50\n}, this))({\n  background: props => props.color === 'blue' ? 'linear-gradient(45deg, #38c748 30%, #68e84a 90%)' : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: props => props.color === 'green' ? '0 3px 5px 2px rgba(138, 255, 79, .3)' : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  color: 'white',\n  height: 40,\n  padding: '0 30px',\n  margin: 8,\n  lineHeight: 1.2,\n  textAlign: \"center\"\n});\nexport default function AdaptingStyledComponents({\n  project\n}) {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      size: \"small\",\n      href: project.links.appLink,\n      color: \"green\",\n      children: \"Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n      size: \"small\",\n      href: project.links.repoLink,\n      color: \"blue\",\n      children: \"Github\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c = AdaptingStyledComponents;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdaptingStyledComponents\");","map":{"version":3,"sources":["/Users/misterpagz/Documents/reactportfolio/src/components/Button/index.js"],"names":["React","styled","Button","MyButton","color","other","background","props","border","borderRadius","boxShadow","height","padding","margin","lineHeight","textAlign","AdaptingStyledComponents","project","links","appLink","repoLink"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,0BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,QAAQ,GAAGF,MAAM,CAAC,CAAC;AAAEG,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,kBAAyB,QAAC,MAAD,OAAYA;AAAZ;AAAA;AAAA;AAAA;AAAA,QAA1B,CAAN,CAAuD;AACtEC,EAAAA,UAAU,EAAGC,KAAD,IACVA,KAAK,CAACH,KAAN,KAAgB,MAAhB,GACI,kDADJ,GAEI,kDAJgE;AAKtEI,EAAAA,MAAM,EAAE,CAL8D;AAMtEC,EAAAA,YAAY,EAAE,CANwD;AAOtEC,EAAAA,SAAS,EAAGH,KAAD,IACTA,KAAK,CAACH,KAAN,KAAgB,OAAhB,GACI,sCADJ,GAEI,sCAVgE;AAWtEA,EAAAA,KAAK,EAAE,OAX+D;AAYtEO,EAAAA,MAAM,EAAE,EAZ8D;AAatEC,EAAAA,OAAO,EAAE,QAb6D;AActEC,EAAAA,MAAM,EAAE,CAd8D;AAetEC,EAAAA,UAAU,EAAE,GAf0D;AAgBtEC,EAAAA,SAAS,EAAE;AAhB2D,CAAvD,CAAjB;AAmBA,eAAe,SAASC,wBAAT,CAAkC;AAACC,EAAAA;AAAD,CAAlC,EAA6C;AAC1D,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,4BACE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,IAAI,EAAEA,OAAO,CAACC,KAAR,CAAcC,OAA3C;AAAoD,MAAA,KAAK,EAAC,OAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,IAAI,EAAEF,OAAO,CAACC,KAAR,CAAcE,QAA3C;AAAqD,MAAA,KAAK,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;KAPuBJ,wB","sourcesContent":["import React from 'react';\nimport { styled } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst MyButton = styled(({ color, ...other }) => <Button {...other} />)({\n  background: (props) =>\n    props.color === 'blue'\n      ? 'linear-gradient(45deg, #38c748 30%, #68e84a 90%)'\n      : 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: (props) =>\n    props.color === 'green'\n      ? '0 3px 5px 2px rgba(138, 255, 79, .3)'\n      : '0 3px 5px 2px rgba(33, 203, 243, .3)',\n  color: 'white',\n  height: 40,\n  padding: '0 30px',\n  margin: 8,\n  lineHeight: 1.2,\n  textAlign: \"center\"\n});\n\nexport default function AdaptingStyledComponents({project}) {\n  return (\n    <React.Fragment>\n      <MyButton size=\"small\" href={project.links.appLink} color=\"green\">Application</MyButton>\n      <MyButton size=\"small\" href={project.links.repoLink} color=\"blue\">Github</MyButton>\n    </React.Fragment>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}